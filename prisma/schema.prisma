// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum userType {
  shopkeeper
  common
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      userType @default(common)
  hash      String

  cpf   String? @unique @db.VarChar(14)
  cnpj  String? @unique @db.VarChar(18)
  name  String  @db.VarChar(40)
  email String  @unique @db.VarChar(120)

  wallet                Wallet?
  sentTransferences     Transference[] @relation("SentTransferences")
  receivedTransferences Transference[] @relation("ReceivedTransferences")

  @@map("users")
}

model Wallet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  balance   BigInt

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  @@map("wallet")
}

model Transference {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  senderId   Int
  sender     User     @relation("SentTransferences", fields: [senderId], references: [id])
  receiverId Int
  receiver   User     @relation("ReceivedTransferences", fields: [receiverId], references: [id])

  amount BigInt

  @@map("transferences")
}
